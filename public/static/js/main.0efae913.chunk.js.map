{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","services/UserService.js","redux/UserActions.js","subcomponents/LoginButton.js","AuthContainer.js","subcomponents/HomepageHeading.js","containers/desktop/DesktopContainer.js","containers/mobile/ResponsiveMobileContainer.js","LandingContainer.js","subcomponents/PrivateRoute.js","services/EventService.js","services/InviteService.js","redux/EventActions.js","redux/ContactActions.js","subcomponents/MobileSideBar.js","subcomponents/EventConfirmationExtraContent.js","Helpers/HelpFunctions.js","containers/modals/NewEventModal.js","subcomponents/SearchForUsers.js","containers/modals/MyContactsModal.js","containers/mobile/MobileDashboardContainer.js","subcomponents/DesktopMenuContainer.js","containers/desktop/DesktopDashboardContainer.js","containers/parents/DashboardContainer.js","subcomponents/TimeModal.js","subcomponents/SearchCategory.js","containers/parents/EventListsContainer.js","subcomponents/InviteListCard.js","containers/mobile/MobileEventContainer.js","containers/tablet/OnlyTabletGrid.js","containers/desktop/OnlyDesktopGrid.js","containers/desktop/DesktopEventContainer.js","containers/parents/EventContainer.js","subscription.js","App.js","redux/InvitationActions.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["isLoginView","isLogin","type","addSessionId","sessionId","UserService","url","this","user","fetch","method","headers","Accept","body","JSON","stringify","response","ok","json","saveUser","addAuthProps","authProps","addCreateUserErrors","errors","LoginButton","onHandleSubmit","Button","primary","fluid","size","onClick","content","AuthContainer","state","username","password","loginMenuHeight","handleOnChange","event","setState","target","name","value","handleIsLoginClick","handleSubmit","props","createNewUser","loginUser","loginErrors","userId","to","Container","Responsive","maxWidth","onlyMobile","Menu","id","Item","header","minWidth","Grid","className","textAlign","verticalAlign","Column","Header","as","Image","src","Form","Segment","stacked","length","Message","color","list","Input","icon","iconPosition","placeholder","onChange","e","Component","connect","user_id","userToken","token","dispatch","getState","api","a","async","service","createUser","window","localStorage","setItem","console","log","mobile","text","inverted","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","children","getWidth","onlyTablet","Visibility","once","onBottomPassed","onBottomPassedReverse","style","minHeight","padding","vertical","pointing","secondary","margin","Divider","section","centered","List","horizontal","divided","link","href","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","animation","direction","onHide","visible","Pusher","dimmed","position","Icon","LandingContainer","container","stackable","Row","width","fontSize","ResponsiveContainer","rest","render","location","pathname","from","redirectToLoginView","EventService","Authorization","yelpItem","start_time","end_time","eventId","yelp_id","address","address1","city","eventsListItem","InviteService","invitation","saveAllEvents","events","addCreatedEvent","addEventLists","eventsList","appendToEventLists","addInvite","invite","fetchEventsFor","fetchAllEvents","map","items","events_lists","hasNoEvents","updateYelpItems","yelpItems","changeActivePageTo","activePage","updateInvite","addContact","contact","isHidden","isHiddenSidebar","invitations","invites","filter","confirmed","NavLink","Portal","closeOnPortalMouseLeave","openOnTriggerClick","trigger","Label","attached","circular","height","right","confirmEvent","invitationId","inviteId","columns","bordered","mapEventsToCardItems","title","description","meta","creator_name","Link","mapEventToCard","mapYelpToCardItems","handleOnClick","item","image","image_url","rating","price","extra","floated","NewEventModal","isNewEventModalShown","closeNewEventModal","onHandleChange","onHandleGatherSubmission","Modal","open","Content","label","TextArea","Actions","initialState","isLoading","results","SearchForUsers","handleResultSelect","result","addContactRemote","handleSearchChange","setTimeout","contacts","mappedResults","includes","Search","loading","onResultSelect","onSearchChange","_","debounce","leading","MyContactsModal","isContactModalHidden","scrolling","Card","Group","closeAddContactModal","MobileDashboardContainer","savedMessage","widgetOpen","componentDidUpdate","prevProps","toggleWidget","addResponseMessage","handleNewUserMessage","newMessage","getSessionId","Accepts","session_id","message","messages","output","generic","forEach","context","skills","user_defined","createNewEventFor","handleChange","handleGatherSubmission","contactsIfNullOrEmpty","subtitle","React","logout","openAddContactModal","openNewEventModal","event_title","event_creator","event_description","DesktopDashboardContainer","prevState","Transition","itemsPerRow","key","DashboardContainer","componentDidMount","session","createNewEvent","createdEvent","closeSideBar","openSideBar","owner_id","otherProps","addToEventsList","newEventListItem","onClose","useState","startTime","setStartTime","endTime","setEndTime","widths","Field","alias","isVisible","yelpId","SearchExampleCategory","setVisible","setYelpId","updateYelpItemsThunk","re","RegExp","escapeRegExp","categories","test","stretched","aligned","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","yelpItemsTotalCount","onPageChange","data","float","find","ownProps","offset","businesses","total","newPage","EventListsContainer","Description","inviteUser","contactId","invitees","EventContainer","eventsLists","activeItem","handleItemClick","useParams","parseInt","cardInfo","tabular","backgroundColor","active","OnlyTabletGrid","marginTop","raised","SearchCategory","OnlyDesktopGrid","DesktopEventContainer","match","params","onlyComputer","withRouter","getEvents","useEffect","MobileEventContainer","convertedVapidKey","base64String","repeat","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlBase64ToUint8Array","process","sendSubscription","subscription","App","handleMessage","origin","action","parse","creator_id","exact","path","component","navigator","serviceWorker","addEventListener","showUser","ready","then","registration","pushManager","getSubscription","existedSubscription","subscribe","applicationServerKey","userVisibleOnly","newSubscription","getItem","catch","Notification","permission","error","subscribeUser","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","combineReducers","removeItem","event_id","middleware","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","reducers","ReactDOM","document","getElementById","URL","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0efae913.chunk.js","sourcesContent":["import * as Types from './actionTypes'\n\nexport const isLoginView = (isLogin) => ({\n  type: Types.IS_LOGIN,\n  isLogin\n})\n\nexport const closeSideBar = () => ({\n  type: Types.CLOSE_SIDE_BAR\n})\n\nexport const openSideBar = () => ({\n  type: Types.OPEN_SIDE_BAR\n})\n\nexport const getSessionId = () =>\n  async function (dispatch, getState, api) {\n    try {\n      const Authorization = getState().authProps.token\n      const response = await window.fetch(`${api}/assistant/create/session`, {\n        headers: { Authorization }\n      })\n      if (!response.ok) throw await response.json()\n      const session = await response.json()\n      window.localStorage.setItem('sessionId', session.session_id)\n      dispatch(addSessionId(session.session_id))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\nexport const addSessionId = (sessionId) => ({\n  type: Types.ADD_SESSION_ID,\n  sessionId\n})\n","export const ADD_USER_ID = 'ADD_USER_ID'\nexport const ADD_USER_TOKEN = 'ADD_USER_TOKEN'\nexport const CREATE_USER_ERROR = 'CREATE_USER_ERROR'\nexport const IS_LOGIN = 'IS_LOGIN'\nexport const ADD_AUTH_PROPS = 'ADD_AUTH_PROPS'\nexport const SAVE_EVENTS = 'SAVE_EVENTS'\nexport const ADD_EVENT = 'ADD_EVENT'\nexport const CLOSE_SIDE_BAR = 'CLOSE_SIDE_BAR'\nexport const OPEN_SIDE_BAR = 'OPEN_SIDE_BAR'\nexport const OPEN_NEW_EVENT_MODAL = 'OPEN_NEW_EVENT_MODAL'\nexport const CLOSE_NEW_EVENT_MODAL = 'CLOSE_NEW_EVENT_MODAL'\nexport const UPDATE_YELP_ITEMS = 'UPDATE_YELP_ITEMS'\nexport const OPEN_ADD_CONTACT_MODAL = 'OPEN_ADD_CONTACT_MODAL'\nexport const CLOSE_ADD_CONTACT_MODAL = 'CLOSE_ADD_CONTACT_MODAL'\nexport const SHOW_USER = 'SHOW_USER'\nexport const ADD_CONTACT = 'ADD_CONTACT'\nexport const INVITE_USER = 'INVITE_USER'\nexport const CHANGE_EVENTS_ACTIVE_PAGE = 'CHANGE_EVENTS_ACTIVE_PAGE'\nexport const YELP_ITEMS_COUNT_TOTAL = 'YELP_ITEMS_COUNT_TOTAL'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const ADD_INVITATIONS = 'ADD_INVITATIONS'\nexport const ADD_INVITATION = 'ADD_INVITATION'\nexport const UPDATE_INVITE = 'UPDATE_INVITE'\nexport const ADD_EVENTS_LISTS = 'ADD_EVENTS_LISTS'\nexport const UPDATE_EVENTS_LISTS = 'UPDATE_EVENTS_LISTS'\nexport const APPEND_TO_EVENTS_LISTS = 'APPEND_TO_EVENTS_LISTS'\nexport const ADD_SESSION_ID = 'ADD_SESSION_ID'\nexport const NO_EVENTS = 'NO_EVENTS'\n","class UserService {\n  constructor (url) {\n    this.url = url\n  }\n\n  async createUser (user) {\n    const response = await fetch(`${this.url}/users`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({ user })\n    })\n    if (!response.ok) throw await response.json()\n    return response.json()\n  }\n\n  async loginUser (user) {\n    const response = await fetch(this.url, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({ user })\n    })\n    if (!response.ok) throw await response.json()\n    return response.json()\n  }\n}\n\nexport default UserService\n","import * as Type from './actionTypes'\nimport { addInvitations } from './InvitationActions'\nimport UserService from '../services/UserService'\n\nexport const saveUser = (user) => ({\n  type: Type.SHOW_USER,\n  user\n})\n\nexport const showUser = () =>\n  async function (dispatch, getState, api) {\n    const authProps = getState().authProps\n    const response = await fetch(`${api}/users/${authProps.user_id}`, { //eslint-disable-line \n      headers: {\n        Authorization: authProps.token,\n        Accept: 'application/json'\n      }\n    })\n    const user = await response.json()\n    dispatch(saveUser(user))\n    dispatch(addInvitations(user.invitations))\n  }\n\nexport const addAuthProps = (authProps) => ({\n  type: Type.ADD_AUTH_PROPS,\n  authProps\n})\n\nexport const logout = () => ({\n  type: Type.LOGOUT_USER\n})\n\nexport const addCreateUserErrors = (errors) => ({\n  type: Type.CREATE_USER_ERROR,\n  errors\n})\n\nexport const createNewUser = (user) => async function (dispatch, getState, api) {\n  try {\n    const service = new UserService(`${api}`)\n    const authProps = await service.createUser(user)\n    window.localStorage.setItem('authProps', JSON.stringify(authProps))\n    dispatch(addAuthProps(authProps))\n  } catch (e) {\n    console.log(e)\n    dispatch(addCreateUserErrors(e.errors))\n  }\n}\n\nexport const loginUser = (user) => async function (dispatch, getState, api) {\n  try {\n    const service = new UserService(`${api}/login`)\n    const authProps = await service.loginUser(user)\n    window.localStorage.setItem('authProps', JSON.stringify(authProps))\n    dispatch(addAuthProps(authProps))\n  } catch (e) {\n    dispatch(addCreateUserErrors(['Unable to sign in, please try again.']))\n  }\n}\n","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nconst LoginButton = ({ isLogin, onHandleSubmit }) => {\n  return (\n    <Button primary fluid size='large' onClick={onHandleSubmit} content={isLogin ? 'Login' : 'Signup'} />\n  )\n}\n\nexport default LoginButton\n","import React, { Component } from 'react'\nimport { isLoginView } from './redux/actions'\nimport { createNewUser, loginUser } from './redux/UserActions'\nimport { connect } from 'react-redux'\nimport { Form, Grid, Header, Image, Message, Segment, Menu, Container, Responsive } from 'semantic-ui-react'\nimport LoginButton from './subcomponents/LoginButton'\nimport { Link, Redirect } from 'react-router-dom'\n\nclass AuthContainer extends Component {\n  state = { //eslint-ignore-line\n    username: '',\n    password: '',\n    loginMenuHeight: 0\n  }\n\n  handleOnChange = (event) => this.setState({ [event.target.name]: event.target.value })\n  handleIsLoginClick = (event) => this.setState({ isLogin: !this.state.isLogin })\n  handleSubmit = (event) => {\n    const { username, password } = this.state\n    const { isLogin } = this.props\n    const { createNewUser, loginUser } = this.props\n    isLogin ? loginUser({ username, password }) : createNewUser({ username, password })\n  }\n\n  render () {\n    const { username, password } = this.state\n    const { loginErrors, isLoginView, isLogin, userId } = this.props\n    const headerMessage = \"Oops! Looks like something went wrong!\"\n    return (\n      <>\n        {userId ? <Redirect to='/dashboard' /> : null}\n        <Container fluid>\n          <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n            <Menu id='login-menu'>\n              <Link to='/'><Menu.Item header content='Gather' /></Link>\n            </Menu>\n          </Responsive>\n          <Responsive minWidth={Responsive.onlyMobile.maxWidth}>\n            <Menu id='login-menu'>\n              <Link to='/'><Menu.Item header content='Gather' /></Link>\n            </Menu>\n          </Responsive>\n          <Grid className='login-grid' textAlign='center' verticalAlign='middle'>\n            <Grid.Column className='login-screen-grid-column'>\n              <Header as='h2' textAlign='center'>\n                <Image src='/logo_without.png' /> {isLogin ? 'Log-in to your account' : 'Sign up and Gather!'}\n              </Header>\n              <Form size='large'>\n                <Segment stacked>\n                  {loginErrors.length > 0 ? <Message header={headerMessage} color='red' list={loginErrors} /> : null}\n                  <Form.Input\n                    fluid\n                    name='username'\n                    icon='user'\n                    iconPosition='left'\n                    placeholder='E-mail address'\n                    value={username}\n                    onChange={this.handleOnChange}\n                  />\n                  <Form.Input\n                    fluid\n                    name='password'\n                    icon='lock'\n                    iconPosition='left'\n                    placeholder='Password'\n                    type='password'\n                    value={password}\n                    onChange={this.handleOnChange}\n                  />\n                  <LoginButton isLogin={isLogin} onHandleSubmit={this.handleSubmit} />\n                </Segment>\n              </Form>\n              <Message>\n                {!isLogin ? 'Already have an account? ' : 'New to us? '}\n                {\n                  isLogin ?\n                    <Link onClick={e => isLoginView(false)} to='/signup'>Sign Up</Link> :\n                    <Link to='/login' onClick={e => isLoginView(true)}>Login</Link>\n                }\n              </Message>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  const { authProps, isLogin, loginErrors } = state\n  return {\n    userId: authProps ? authProps.user_id : null,\n    userToken: authProps ? authProps.token : null,\n    isLogin: isLogin,\n    loginErrors: loginErrors\n  }\n}\n\nexport default connect(mapStateToProps, { createNewUser, loginUser, isLoginView })(AuthContainer)\n","import React from 'react'\nimport { Container, Button, Header } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { isLoginView } from '../redux/actions'\nimport { connect } from 'react-redux'\n\nconst HomepageHeading = ({ mobile, isLoginView }) => (\n  <Container text>\n    <Header\n      as='h1'\n      content=\"Let's Gather.\"\n      inverted\n      className='homepage-header1'\n    />\n    <Header\n      as='h2'\n      className='homepage-header2'\n      content='Making it convienent to link.'\n      inverted\n    />\n    <Link to='/signup'><Button size='huge' primary onClick={() => isLoginView(false)} content='Sign Up' /></Link>\n    <Link to='/login'><Button size='huge' color='grey' onClick={() => isLoginView(true)}>Login</Button></Link>\n  </Container>\n)\n\nexport default connect(null, { isLoginView })(HomepageHeading)\n","import React, { Component } from 'react'\nimport { Responsive, Visibility, Segment, Menu, Container, List, Divider, Image } from 'semantic-ui-react'\nimport HomepageHeading from '../../subcomponents/HomepageHeading'\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            className='background-image-set'\n            inverted\n            textAlign='center'\n            style={{ minHeight: 700, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size='large'\n            >\n              <Container fluid>\n                <Menu.Item header content='Gather' />\n                {/* <Menu.Item position='right'>\n                  <Button as='a' inverted={!fixed}>\n                    Log in\n                  </Button>\n                  <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item> */}\n              </Container>\n            </Menu>\n            <HomepageHeading />\n          </Segment>\n        </Visibility>\n\n        {children}\n        <Segment inverted vertical style={{ margin: '0em 0em 0em' }}>\n          <Container textAlign='center'>\n            <Divider inverted section />\n            <Image centered size='mini' src='/logo.png' />\n            <List horizontal inverted divided link size='small'>\n              <List.Item as='a' href='#'>\n                Site Map\n              </List.Item>\n              <List.Item as='a' href='#'>\n                Contact Us\n              </List.Item>\n              <List.Item as='a' href='#'>\n                Terms and Conditions\n              </List.Item>\n              <List.Item as='a' href='#'>\n                Privacy Policy\n              </List.Item>\n            </List>\n          </Container>\n        </Segment>\n      </Responsive>\n    )\n  }\n}\n\nexport default DesktopContainer\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n","import React, { Component } from 'react'\nimport { Responsive, Sidebar, Menu, Segment, Container, Icon } from 'semantic-ui-react'\nimport HomepageHeading from '../../subcomponents/HomepageHeading'\nimport { Link } from 'react-router-dom'\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render () {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          direction='right'\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        />\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            className='background-image-set'\n            inverted\n            textAlign='center'\n            style={{ minHeight: 350, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size='large'>\n                <Link to='/'><Menu.Item header content='Gather' /></Link>\n                <Menu.Item position='right' onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading mobile />\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\nexport default MobileContainer\n","import React from 'react'\nimport DesktopContainer from './containers/desktop/DesktopContainer'\nimport { Header, Segment, Grid } from 'semantic-ui-react'\nimport MobileContainer from './containers/mobile/ResponsiveMobileContainer'\n\nconst LandingContainer = () => {\n  return (\n    <ResponsiveContainer>\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Let us Gather\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                We can give your company superpowers to do things that they never thought possible.\n                Let us delight your customers and empower your needs... through pure data analytics.\n              </p>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                We Make Bananas That Can Dance\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                Yes that's right, you thought it was the stuff of dreams, but even bananas can be\n                bioengineered.\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LandingContainer\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n)\n","import React from 'react'\nimport { Route, Redirect } from 'react-router'\nimport { isLoginView } from '../redux/actions'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => {\n  const { authProps } = state\n  return {\n    userId: authProps ? authProps.user_id : null,\n    userToken: authProps ? authProps.token : null\n  }\n}\n\nconst redirectToLoginView = (location) => {\n  return <Redirect to={{ pathname: '/login', state: { from: location } }} />\n}\n\nconst PrivateRoute = ({ children, userId, userToken, dispatch, ...rest }) => {\n  dispatch(isLoginView(true))\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        userToken && userId ? children : redirectToLoginView(location)}\n    />\n  )\n}\nexport default connect(mapStateToProps)(PrivateRoute)\n","class EventService {\n  constructor (userId, token, url) {\n    this.userId = userId\n    this.token = token\n    this.url = url\n  }\n\n  async fetchAllEvents () {\n    const response = await window.fetch(`${this.url}/users/${this.userId}/events`, {\n      headers: { Authorization: this.token }\n    })\n    if (!response.ok) throw await response.json()\n    return response.json()\n  }\n\n  async createNewEvent (event) {\n    console.log(event)\n    console.log(`${this.url}/users/${this.userId}/events`)\n    const response = await window.fetch(`${this.url}/users/${this.userId}/events`, {\n      method: 'POST',\n      headers: {\n        Authorization: this.token,\n        'Content-Type': 'application/json',\n        Accept: 'applcication/json'\n      },\n      body: JSON.stringify({ event })\n    })\n    if (!response.ok) throw await response.json()\n    return response.json()\n  }\n\n  async addToEventsList (yelpItem, start_time, end_time, eventId) {   // eslint-disable-line\n    const response = await fetch(`${this.url}/events/${eventId}/events_lists`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        Authorization: this.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        event: {\n          yelp_id: yelpItem.id,\n          name: yelpItem.name,\n          url: yelpItem.url,\n          address: `${yelpItem.location.address1} ${yelpItem.location.city} ${yelpItem.location.state}`,\n          start_time,\n          end_time\n        }\n      })\n    })\n    const eventsListItem = await response.json()\n    if (!response.ok) throw eventsListItem\n    return eventsListItem\n  }\n}\n\nexport default EventService\n","export class InviteService {\n  constructor (url, token) {\n    this.url = url\n    this.token = token\n  }\n\n  async inviteUser (eventId, userId) {\n    const response = await fetch(`${this.url}/events/${eventId}/invitations`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        Authorization: this.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({ invitation: { user_id: userId } })\n    })\n    if (!response.ok) throw await response.json()\n    return response.json()\n  }\n}","import * as Types from './actionTypes'\nimport EventService from '../services/EventService'\nimport { InviteService } from '../services/InviteService'\n\nexport const saveAllEvents = (events) => ({\n  type: Types.SAVE_EVENTS,\n  events: events\n})\n\nexport const addCreatedEvent = (event) => ({\n  type: Types.ADD_EVENT,\n  event\n})\n\nexport const openNewEventModal = () => ({\n  type: Types.OPEN_NEW_EVENT_MODAL\n})\n\nexport const closeNewEventModal = () => ({\n  type: Types.CLOSE_NEW_EVENT_MODAL\n})\n\nexport const addEventLists = (eventsList) => ({\n  type: Types.ADD_EVENTS_LISTS,\n  eventsList\n})\n\nexport const updateEventLists = (eventsListItem) => ({\n  type: Types.UPDATE_EVENTS_LISTS,\n  eventsListItem\n})\n\nexport const appendToEventLists = (eventsListItem) => ({\n  type: Types.APPEND_TO_EVENTS_LISTS,\n  eventsListItem\n})\n\nexport const userHasNoEvents = (hasNoEvents) => ({\n  type: Types.NO_EVENTS,\n  hasNoEvents\n})\n\nexport const addInvite = (invite) => ({\n  type: Types.INVITE_USER,\n  invite\n})\n\nexport const inviteUser = (eventId, contactId) =>\n  async function (dispatch, getState, api) {\n    try {\n      const token = getState().token\n      const service = new InviteService(api, token)\n      const invite = await service.inviteUser(eventId, contactId)\n      dispatch(addInvite(invite))\n    } catch (e) {\n      console.log(e)\n    }\n}\n\nexport const fetchEventsFor = () =>\n  async function (dispatch, getState, api) {\n    const authProps = getState().authProps\n    const service = new EventService(authProps.user_id, authProps.token, api)\n    try {\n      const events = await service.fetchAllEvents()\n      const eventsList = events.map((event) => ({\n        eventId: event.id,\n        items: event.events_lists\n      }))\n      dispatch(addEventLists(eventsList))\n      dispatch(saveAllEvents(events))\n      if (events.length === 0) dispatch(userHasNoEvents(true))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\nexport const createNewEventFor = (event) => console.log('in here') ||\n  async function (dispatch, getState, api) {\n    const authProps = getState().authProps\n    const service = new EventService(authProps.user_id, authProps.token, api)\n    const createdEvent = await service.createNewEvent(event)\n    dispatch(addCreatedEvent(createdEvent))\n    dispatch(appendToEventLists({\n      eventId: createdEvent.id,\n      items: createdEvent.events_lists\n    }))\n  }\n\nexport const updateYelpItems = (items) => ({\n  type: Types.UPDATE_YELP_ITEMS,\n  yelpItems: items\n})\n\nexport const updateYelpItemsTotalCount = (yelpItemsTotalCount) => ({\n  type: Types.YELP_ITEMS_COUNT_TOTAL,\n  yelpItemsTotalCount\n})\n\nexport const updateYelpItemsThunk = (categories, offset, location, Authorization) =>\n  async function (dispatch, _, api) {\n    const limit = 12\n    const response = await fetch(`${api}/yelp/index?offset=${offset}&limit=${limit}&categories=${categories}&location=${location}`, { headers: {Authorization}}) //eslint-disable-line\n    const items = await response.json()\n    dispatch(updateYelpItems(items.businesses))\n    dispatch(updateYelpItemsTotalCount(items.total))\n  }\n\nexport const changeActivePageTo = (activePage) => ({\n  type: Types.CHANGE_EVENTS_ACTIVE_PAGE,\n  activePage\n})\n\nexport const updateInvite = (invitation) => ({\n  type: Types.UPDATE_INVITE,\n  invitation\n})\n\nexport const confirmEvent = (confirmed, invitationId) =>\n  async function (dispatch, getState, api) {\n    try {\n      const authProps = getState().authProps\n      const response = await fetch(`${api}/invitations/${invitationId}`, { //eslint-disable-line \n        method: 'PATCH',\n        headers: {\n          Authorization: authProps.token,\n          'content-type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({ invitation: { confirmed } })\n      })\n      if (!response.ok) throw await response.json()\n      const invitation = await response.json()\n      if (invitation.confirmed) {\n        dispatch(addCreatedEvent(invitation.event))\n        console.log(invitation.event)\n        dispatch(appendToEventLists({\n          eventId: invitation.event.id,\n          items: invitation.event.events_lists\n        }))\n      }\n      delete invitation.event\n      dispatch(updateInvite(invitation))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\nexport const addToEventsList = (yelpItem, start_time, end_time, eventId) => //eslint-disable-line\n  async function (dispatch, getState, api) {\n    try {\n      const token = getState().authProps.token\n      const service = new EventService(null, token, api)\n      const newEventListItem = await service.addToEventsList(yelpItem, start_time, end_time, eventId)\n      dispatch(updateEventLists(newEventListItem))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n","import * as Type from \"./actionTypes\"\n\nexport const addContact = (contact) => ({\n  type: Type.ADD_CONTACT,\n  contact: contact\n})\n\nexport const openAddContactModal = () => ({\n  type: Type.OPEN_ADD_CONTACT_MODAL\n})\n\nexport const closeAddContactModal = () => ({\n  type: Type.CLOSE_ADD_CONTACT_MODAL\n})\n\nexport const addContactRemote = (userId) =>\n  async function (dispatch, getState, api) {\n    const authProps = getState().authProps\n    const response = await fetch(`${api}/contacts`, { //eslint-disable-line \n      method: 'POST',\n      headers: {\n        Authorization: authProps.token,\n        'content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        owner_id: authProps.user_id\n      })\n    })\n    if (!response.ok) throw await response.json()\n    dispatch(addContact(await response.json()))\n  }\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { closeSideBar, openSideBar } from '../redux/actions'\nimport { logout } from '../redux/UserActions'\nimport { Responsive, Sidebar, Menu, Container, Icon, Portal, Segment, Label } from 'semantic-ui-react'\nimport { openNewEventModal } from '../redux/EventActions'\nimport { openAddContactModal } from '../redux/ContactActions'\n\nconst MobileSideBar = ({ isHidden, dispatch, children, invitations }) => {\n  const invites = invitations.filter(invite => invite.confirmed === null)\n  return (\n    <Responsive\n      as={Sidebar.Pushable}\n      getWidth={getWidth}\n      maxWidth={Responsive.onlyMobile.maxWidth}\n    >\n      <Sidebar\n        as={Menu}\n        animation='push'\n        direction='right'\n        onHide={() => dispatch(closeSideBar())}\n        vertical\n        inverted\n        visible={!isHidden}\n      >\n        <Menu.Item content='Dashboard' as={NavLink} to='/dashboard' />\n        <Portal\n          closeOnPortalMouseLeave\n          openOnTriggerClick\n          trigger={\n            <Menu.Item name='Invitations'>\n              Invitations\n              {invites.length !== 0 ? <Label attached='top right' color='blue' circular content={invites.length} /> : null}\n            </Menu.Item>\n          }\n        >\n          <Segment className='invitations-segment' style={{ height: '80vh', width: '100vw', right: '0px' }}>\n            {/* <Card.Group items={mapInvitationsToCardItems(props.invitations.filter(invite => invite.confirmed === null))} /> */}\n          </Segment>\n        </Portal>\n        <Menu.Item content='New Gathering' onClick={() => dispatch(openNewEventModal())} />\n        <Menu.Item name='my contacts' onClick={() => dispatch(openAddContactModal())} />\n        \n        <Menu.Item onClick={() => dispatch(logout())} content='Log Out' />\n      </Sidebar>\n      <Sidebar.Pusher dimmed={!isHidden}>\n        <Container style={{ minHeight: '95vh' }}>\n          <Menu>\n            <Link to='/'><Menu.Item header content='Gather' /></Link>\n            <Menu.Item position='right' onClick={() => dispatch(openSideBar())}>\n              <Icon name='sidebar' />\n            </Menu.Item>\n          </Menu>\n          {children}\n        </Container>\n      </Sidebar.Pusher>\n    </Responsive>\n  )\n}\n\nconst mapStateToProps = state => ({\n  isHidden: state.isHiddenSidebar,\n  invitations: state.invitations\n})\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nexport default connect(mapStateToProps)(MobileSideBar)\n","import React from 'react'\nimport { Grid, Icon } from 'semantic-ui-react'\nimport { confirmEvent } from '../redux/EventActions'\nimport { connect } from 'react-redux'\n\nconst EventConfirmationExtraContent = ({ inviteId, confirmEvent }) => {\n  return (\n    <Grid container columns={2}>\n      <Grid.Column textAlign='center'>\n        <Icon bordered name='checkmark' color='green' onClick={() => confirmEvent(true, inviteId)} />\n      </Grid.Column>\n      <Grid.Column textAlign='center'>\n        <Icon bordered name='x' color='red' onClick={() => confirmEvent(false, inviteId)} />\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default connect(null, { confirmEvent })(EventConfirmationExtraContent)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'semantic-ui-react'\nimport EventConfirmationExtraContent from '../subcomponents/EventConfirmationExtraContent'\nexport const mapEventsToCardItems = (events) => events.map(event => ({\n  header: event.title,\n  description: event.description,\n  meta: `Created by: ${event.creator_name}`,\n  fluid: true,\n  as: Link,\n  to: `/event/${event.id}`\n}))\n\nexport const mapEventToCard = (event) => ({\n  header: event.title,\n  description: event.description,\n  meta: `Created by: ${event.creator_name}`,\n  fluid: true\n})\n\nexport const mapYelpToCardItems = (items, handleOnClick) => items.map(item => ({\n  header: item.name,\n  image: item.image_url,\n  description: item.description,\n  meta: `Rating: ${item.rating}, Price: ${item.price}`,\n  fluid: true,\n  extra: <Button floated='right' primary onClick={event => handleOnClick(item.id)}>Add to I.T.</Button>\n}))\n\nexport const mapInvitationsToCardItems = (invitations) => invitations.map(invite => ({\n  header: invite.event_title,\n  meta: invite.event_creator,\n  description: invite.event_description,\n  extra: <EventConfirmationExtraContent inviteId={invite.id} />\n}))\n","import React from 'react'\nimport { Modal, Form, Button } from 'semantic-ui-react'\nconst NewEventModal = ({ isNewEventModalShown, title, description, closeNewEventModal, onHandleChange, onHandleGatherSubmission }) =>\n  <Modal size='small' open={isNewEventModalShown}>\n    <Modal.Header>New Gathering</Modal.Header>\n    <Modal.Content>\n      <Form>\n        <Form.Input\n          fluid\n          label='Title'\n          placeholder='Enter title'\n          value={title}\n          name='title'\n          onChange={onHandleChange}\n        />\n        <Form.TextArea\n          label='Description'\n          name='description'\n          placeholder='Enter description'\n          value={description}\n          onChange={onHandleChange}\n        />\n      </Form>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button color='red' onClick={() => closeNewEventModal()}>\n        Cancel\n      </Button>\n      <Button primary onClick={onHandleGatherSubmission}>\n        Create\n      </Button>\n    </Modal.Actions>\n  </Modal>\nexport default NewEventModal\n","import React, { Component } from 'react'\nimport { Search } from 'semantic-ui-react'\nimport _ from 'lodash'\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\nexport class SearchForUsers extends Component {\n  state = initialState\n\n  handleResultSelect = (event, { result, value }) => {\n    this.setState({ value: result.title, isLoading: true })\n    console.log(this.props)\n    try {\n      this.props.addContactRemote(result.id)\n      this.setState({ isLoading: false, value: '' })\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n    setTimeout(async () => {\n      const response = await fetch(`https://gatherapp-flatiron.herokuapp.com/users?query=${value}`, { headers: { Authorization: this.props.token } }) //eslint-disable-line\n      const results = await response.json()\n      const contacts = this.props.user.contacts.map((contact) => contact.id)\n      const mappedResults = results.filter((result) => result.id !== this.props.user.id && !contacts.includes(result.id)).map((result) => ({ title: result.username, id: result.id }))\n      this.setState({ isLoading: false, results: mappedResults })\n    }, 1000)\n  }\n\n  render () {\n    const { isLoading, value, results } = this.state\n    return (\n      <Search\n        fluid\n        size='small'\n        placeholder='Find a user...'\n        loading={isLoading}\n        onResultSelect={this.handleResultSelect}\n        onSearchChange={_.debounce(this.handleSearchChange, 500, {\n          leading: true\n        })}\n        results={results}\n        value={value}\n      />\n    )\n  }\n}\n\nexport default SearchForUsers\n","import React from 'react'\nimport { Modal, Grid, Card, Button } from 'semantic-ui-react'\nimport SearchForUsers from '../../subcomponents/SearchForUsers'\n\nconst MyContactsModal = (props) =>\n  <Modal size='small' open={!props.isContactModalHidden}>\n    <Modal.Header>\n      <Grid columns={2} stackable>\n        <Grid.Column textAlign='left' width={9} verticalAlign='middle'>\n          My Contacts\n        </Grid.Column>\n        <Grid.Column textAlign='right' width={7}>\n          <SearchForUsers\n            user={props.user}\n            token={props.token}\n            addContactRemote={(userId) => props.addContactRemote(userId)}\n          />\n        </Grid.Column>\n      </Grid>\n    </Modal.Header>\n    <Modal.Content scrolling>\n      <Card.Group items={props.contacts} centered/>\n    </Modal.Content>\n    <Modal.Actions>\n      <Button color='red' onClick={() => props.closeAddContactModal()}>\n        Close\n      </Button>\n    </Modal.Actions>\n  </Modal>\n\nexport default MyContactsModal\n","import React from 'react'\nimport { Grid, Card } from 'semantic-ui-react'\nimport { Widget, addResponseMessage, toggleWidget } from 'react-chat-widget'\nimport 'react-chat-widget/lib/styles.css'\nimport MobileSideBar from '../../subcomponents/MobileSideBar'\nimport { mapEventsToCardItems } from '../../Helpers/HelpFunctions'\nimport NewEventModal from '../modals/NewEventModal'\nimport MyContactsModal from '../modals/MyContactsModal'\n\nclass MobileDashboardContainer extends React.Component {\n  state = {\n    title: '',\n    description: '',\n    savedMessage: '',\n    widgetOpen: false\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.hasNoEvents && !this.state.widgetOpen) {\n      toggleWidget()\n      addResponseMessage(\"Hey, looks like you don't have any Gatherings yet.\")\n      addResponseMessage('I can help you with that. Just type something like:')\n      addResponseMessage('I would like to create an event.')\n      this.setState({ widgetOpen: true })\n    }\n    if (prevProps.sessionId !== this.props.sessionId) {\n      this.handleNewUserMessage(this.state.savedMessage)\n    }\n  }\n\n  handleNewUserMessage = async (newMessage) => {\n    const { sessionId, getSessionId, token } = this.props\n    try {\n      if (!sessionId) {\n        this.setState({ savedMessage: newMessage }, () => getSessionId(token))\n        return\n      }\n      const response = await fetch('http://192.168.0.27:3000/assistant/create', { //eslint-disable-line\n        method: 'POST',\n        headers: {\n          Authorization: token,\n          Accepts: 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: newMessage\n        })\n      })\n      if (!response.ok) throw await response.json()\n      const messages = await response.json()\n      messages.message.output.generic.forEach(message => {\n        addResponseMessage(message.text)\n        if (message.text === 'Please wait while we create this event for you!') {\n          const title = messages.message.context.skills['main skill'].user_defined.title\n          const description = messages.message.context.skills['main skill'].user_defined.description || ''\n          this.props.createNewEventFor({ title, description })\n        }\n      })\n    } catch (e) {\n      this.setState({ savedMessage: newMessage }, () => getSessionId(token))\n    }\n  }\n\n  handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n  handleGatherSubmission = () => {\n    const { title, description } = this.state\n    this.props.closeNewEventModal()\n    this.props.createNewEventFor({ title, description })\n    this.setState({ title: '', description: '' })\n  }\n\n  contactsIfNullOrEmpty = () => {\n    if (this.props.user) {\n      if (this.props.user.contacts && this.props.user.contacts.length !== 0) {\n        return this.props.user.contacts.map(contact => ({ header: contact.username }))\n      }\n    }\n    return [{ header: 'Please use search to add...' }]\n  }\n\n  render () {\n    const { title, description } = this.state\n    const { events, isNewEventModalShown, closeNewEventModal, closeAddContactModal, isContactModalHidden, addContactRemote, user, token } = this.props\n\n    return (\n      <MobileSideBar>\n        <Grid columns={2} stackable>\n          <Grid.Column>\n            <Card.Group centered items={mapEventsToCardItems(events)} />\n          </Grid.Column>\n        </Grid>\n        <Widget\n          title='Your assistant'\n          subtitle='Hi, I am Watson! Ask me to create an event.'\n          handleNewUserMessage={this.handleNewUserMessage}  //eslint-disable-line\n        />\n        <NewEventModal\n          isNewEventModalShown={isNewEventModalShown}\n          title={title}\n          description={description}\n          closeNewEventModal={closeNewEventModal}\n          onHandleChange={this.handleChange}\n          onHandleGatherSubmission={this.handleGatherSubmission}\n        />\n        <MyContactsModal\n          user={user}\n          token={token}\n          isContactModalHidden={isContactModalHidden}\n          addContactRemote={addContactRemote}\n          contacts={this.contactsIfNullOrEmpty()}\n          closeAddContactModal={closeAddContactModal}\n        />\n        {/* <MyContactsModal isContactModalHidden={isContactModalHidden} addContactRemote={addContactRemote} contacts={this.contactsIfNullOrEmpty()} closeAddContactModal={closeAddContactModal} /> */}\n\n      </MobileSideBar>\n    )\n  }\n}\n\nexport default MobileDashboardContainer\n","import React from 'react'\nimport { Container, Menu, Responsive, Image, Portal, Label, Segment, Card } from 'semantic-ui-react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/UserActions'\nimport { openNewEventModal } from '../redux/EventActions'\nimport { openAddContactModal } from '../redux/ContactActions'\nimport { mapInvitationsToCardItems } from '../Helpers/HelpFunctions'\n\nconst DesktopMenuContainer = props => {\n  const invites = props.invitations.filter(invite => invite.confirmed === null)\n  return (\n    <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n      <Container fluid>\n        <Menu id='login-menu'>\n          <Menu.Item header as={Link} to='/'><Image src='/logo_without.png' size='mini' /> </Menu.Item>\n          <Menu.Menu position='right'>\n            <Menu.Item name='Dashboard' as={NavLink} to='/dashboard'></Menu.Item>\n            <Portal\n              closeOnPortalMouseLeave\n              openOnTriggerClick\n              trigger={\n                <Menu.Item name='Invitations'>\n                  Invitations\n                  {invites.length !== 0 ? <Label attached='top right' color='blue' circular content={invites.length} /> : null}\n                </Menu.Item>\n              }\n            >\n              <Segment className='invitations-segment'>\n                <Card.Group items={mapInvitationsToCardItems(props.invitations.filter(invite => invite.confirmed === null))} />\n              </Segment>\n            </Portal>\n            <Menu.Item name='add event' onClick={() => props.openNewEventModal()}></Menu.Item>\n            <Menu.Item name='my contacts' onClick={() => props.openAddContactModal()} />\n            <Menu.Item name='Log out' onClick={() => props.logout()}></Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Container>\n          {props.children}\n        </Container>\n      </Container>\n    </Responsive>\n  )\n}\nconst mapStateToProps = (state) => ({\n  isContactModalHidden: state.isContactModalHidden, \n  invitations: state.invitations\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(logout()),\n  openAddContactModal: () => dispatch(openAddContactModal()),\n  openNewEventModal: () => dispatch(openNewEventModal())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DesktopMenuContainer)\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n","import React, { Component } from 'react'\nimport { Card, Transition } from 'semantic-ui-react'\nimport { mapEventsToCardItems } from '../../Helpers/HelpFunctions'\nimport DesktopMenuContainer from '../../subcomponents/DesktopMenuContainer'\nimport { Link } from 'react-router-dom'\nimport MyContactsModal from '../modals/MyContactsModal'\nimport NewEventModal from '../modals/NewEventModal'\nimport { Widget, addResponseMessage, toggleWidget } from 'react-chat-widget'\n\nexport class DesktopDashboardContainer extends Component {\n  state = {\n    title: '',\n    description: '',\n    savedMessage: '',\n    widgetOpen: false\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (this.props.hasNoEvents && !this.state.widgetOpen) {\n      toggleWidget()\n      addResponseMessage(\"Hey, looks like you don't have any Gatherings yet.\")\n      addResponseMessage('I can help you with that. Just type something like:')\n      addResponseMessage('I would like to create an event.')\n      this.setState({ widgetOpen: true })\n    }\n    if (prevProps.sessionId !== this.props.sessionId) {\n      this.handleNewUserMessage(this.state.savedMessage)\n    }\n  }\n\n  handleNewUserMessage = async (newMessage) => {\n    const { sessionId, getSessionId, token } = this.props\n    try {\n      if (!sessionId) {\n        console.log('getting a session')\n        this.setState({ savedMessage: newMessage }, () => getSessionId(token))\n        return\n      }\n      const response = await fetch('https://gatherapp-flatiron.herokuapp.com/assistant/create', { //eslint-disable-line\n        method: 'POST',\n        headers: {\n          Authorization: token,\n          Accepts: 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId,\n          message: newMessage\n        })\n      })\n      if (!response.ok) throw await response.json()\n      const messages = await response.json()\n      messages.message.output.generic.forEach(message => {\n        addResponseMessage(message.text)\n        if (message.text === 'Please wait while we create this event for you!') {\n          const title = messages.message.context.skills['main skill'].user_defined.title\n          const description = messages.message.context.skills['main skill'].user_defined.description || ''\n          this.props.createNewEventFor({ title, description })\n        }\n      })\n    } catch (e) {\n      console.log('getting a session')\n      this.setState({ savedMessage: newMessage }, () => getSessionId(token))\n    }\n  }\n\n  handleChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  handleGatherSubmission = () => {\n    const { title, description } = this.state\n    this.props.closeNewEventModal()\n    this.props.createNewEventFor({ title, description })\n    this.setState({ title: '', description: '' })\n  }\n\n  contactsIfNullOrEmpty = () => {\n    if (this.props.user) {\n      if (this.props.user.contacts && this.props.user.contacts.length !== 0) {\n        return this.props.user.contacts.map(contact => ({ header: contact.username }))\n      }\n    }\n    return [{ header: 'Please use search to add...' }]\n  }\n\n  render () {\n    const { isNewEventModalShown, closeNewEventModal, closeAddContactModal, isContactModalHidden, addContactRemote, user } = this.props\n    const { title, description } = this.state\n    return (\n      <DesktopMenuContainer>\n        <Widget\n          title='Your assistant'\n          subtitle='Hi, I am Watson! Ask me to create an event.'\n          handleNewUserMessage={this.handleNewUserMessage}  //eslint-disable-line\n        />\n\n        <Transition.Group as={Card.Group} centered itemsPerRow={4} animation='fly left'>\n          {mapEventsToCardItems(this.props.events).map(event =>\n            <Card fluid as={Link} to={event.to} key={`card-${event.header}`} header={event.header} description={event.description} />)}\n        </Transition.Group>\n        <NewEventModal\n          isNewEventModalShown={isNewEventModalShown}\n          title={title}\n          description={description}\n          closeNewEventModal={closeNewEventModal}\n          onHandleChange={this.handleChange}\n          onHandleGatherSubmission={this.handleGatherSubmission}\n        />\n        <MyContactsModal\n          user={user}\n          isContactModalHidden={isContactModalHidden}\n          addContactRemote={addContactRemote}\n          contacts={this.contactsIfNullOrEmpty()}\n          closeAddContactModal={closeAddContactModal}\n          userId={this.props.userId}\n          token={this.props.token}\n        />\n      </DesktopMenuContainer>\n    )\n  }\n}\n\nexport default DesktopDashboardContainer\n","import React from 'react'\nimport MobileDashboardContainer from '../mobile/MobileDashboardContainer'\nimport { connect } from 'react-redux'\nimport DesktopDashboardContainer from '../desktop/DesktopDashboardContainer'\nimport { createNewEventFor, closeNewEventModal, fetchEventsFor } from '../../redux/EventActions'\nimport { openSideBar, closeSideBar, getSessionId } from '../../redux/actions'\nimport { addContactRemote, closeAddContactModal } from '../../redux/ContactActions'\nimport { Redirect } from 'react-router-dom'\n\nclass DashboardContainer extends React.Component {\n  componentDidMount = () => this.props.fetchEventsFor()\n  render = () => <ResponsiveContainer {...this.props} />\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state.authProps.user_id,\n    token: state.authProps.token,\n    events: state.events,\n    isNewEventModalShown: state.isNewEventModalShown,\n    isContactModalHidden: state.isContactModalHidden,\n    user: state.user,\n    sessionId: state.sessionId,\n    hasNoEvents: state.hasNoEvents\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSessionId: (token) => dispatch(getSessionId(token)),\n    createNewEventFor: (event) => dispatch(createNewEventFor(event)),\n    closeSideBar: () => dispatch(closeSideBar()),\n    openSideBar: () => dispatch(openSideBar()),\n    closeNewEventModal: () => {\n      dispatch(closeNewEventModal())\n      dispatch(closeSideBar())\n    },\n    fetchEventsFor: () => dispatch(fetchEventsFor()),\n    addContactRemote: (userId) => dispatch(addContactRemote(userId)),\n    closeAddContactModal: () => dispatch(closeAddContactModal())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer)\n\nconst ResponsiveContainer = (props) => (\n  <div>\n    {!props.userId ? <Redirect to='/' /> : null}\n    <MobileDashboardContainer {...props} />\n    <DesktopDashboardContainer {...props} />\n  </div>\n)\n","import React, { useState } from 'react'\nimport { Modal, Form, Button, Icon } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { addToEventsList } from '../redux/EventActions'\n\nconst TimeModal = ({ open, onClose, yelpItem, token, addToEventsList, eventId }) => {\n  const [startTime, setStartTime] = useState('17:00')\n  const [endTime, setEndTime] = useState('20:00')\n  return (\n    <Modal open={open}>\n      <Modal.Header>Please enter time frame</Modal.Header>\n      <Modal.Content>\n        <Form loading={false}>\n          <Form.Group widths='equal'>\n            <Form.Field>\n              <label>Start time</label>\n              <input type='time' value={startTime} onChange={(e) => setStartTime(e.target.value)} />\n            </Form.Field>\n            <Form.Field>\n              <label>End time</label>\n              <input type='time' value={endTime} onChange={(e) => setEndTime(e.target.value)} />\n            </Form.Field>\n          </Form.Group>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='red' onClick={() => onClose()}>\n          <Icon name='remove' /> Cancel\n        </Button>\n        <Button\n          color='green'\n          onClick={(event) => {\n            addToEventsList(yelpItem, startTime, endTime, eventId, token)\n            onClose()\n          }}\n        >\n          <Icon name='checkmark' /> Confirm\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = (state, otherProps) => ({\n  ...otherProps,\n  token: state.authProps.token,\n  yelpItems: state.yelpItems\n})\nexport default connect(mapStateToProps, { addToEventsList })(TimeModal)\n","import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Search, Grid, Card, Responsive, Pagination } from 'semantic-ui-react'\nimport categories from '../containers/categories.json'\nimport { mapYelpToCardItems } from '../Helpers/HelpFunctions'\nimport { updateYelpItemsThunk, changeActivePageTo } from '../redux/EventActions'\nimport TimeModal from './TimeModal'\n\nconst initialState = { isLoading: false, results: [], value: '', alias: '', isVisible: false, yelpId: '' }\nconst onPageChange = (event, { activePage }, changeActivePageTo) => {\n  changeActivePageTo(activePage)\n  console.log(activePage)\n}\n\nclass SearchExampleCategory extends Component {\n  state = initialState // eslint-disable-line\n\n  setVisible = (isVisible) => this.setState({ isVisible })\n  setYelpId = (yelpId) => this.setState({ yelpId })\n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.props.activePage !== prevProps.activePage) {\n      const location = 'Brooklyn, NY'\n      console.log(this.state.value)\n      this.props.updateYelpItemsThunk(this.state.alias, (this.props.activePage - 1) * 12, location, this.props.token)\n    }\n  }\n\n  handleResultSelect = (e, { result }) => {\n    if (this.state.value !== result.alias) {\n      this.setState({ value: result.title, alias: result.alias })\n      const location = 'Brooklyn, NY'\n      this.props.updateYelpItemsThunk(result.alias, (this.props.activePage - 1) * 12, location, this.props.token)\n    }\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) => re.test(result.alias)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(categories, isMatch)\n      })\n    }, 300)\n  }\n\n  render () {\n    const { isLoading, value, results } = this.state\n\n    return (\n      <>\n        <Grid stackable>\n          <Grid.Row stretched>\n            <Grid.Column width='16' textAlign='center'>\n              <Search\n                aligned='right'\n                size={this.props.size}\n                loading={isLoading}\n                onResultSelect={(event, result) => this.handleResultSelect(event, result)}\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                  leading: true\n                })}\n                results={results}\n                value={value}\n              />\n            </Grid.Column>\n            <Grid.Column textAlign='center'>\n              <Grid.Column verticalAlign='middle' width={8}>\n                <Pagination\n                  boundaryRange={0}\n                  defaultActivePage={1}\n                  ellipsisItem={null}\n                  firstItem={null}\n                  lastItem={null}\n                  siblingRange={1}\n                  totalPages={this.props.yelpItemsTotalCount / 12}\n                  onPageChange={(event, data) => onPageChange(event, data, this.props.changeActivePageTo)}\n                />\n              </Grid.Column>\n            </Grid.Column>\n\n            <Grid.Column float='left'>\n              <Responsive getWidth={getWidth} maxWidth={430}>\n                <Card.Group\n                  items={mapYelpToCardItems(this.props.items, (yelpId) => {\n                    this.setYelpId(yelpId)\n                    this.setVisible(true)\n                  })}\n                />\n              </Responsive>\n              <Responsive getWidth={getWidth} minWidth={431} maxWidth={Responsive.onlyMobile.maxWidth}>\n                <Card.Group\n                  itemsPerRow={2}\n                  items={mapYelpToCardItems(this.props.items, (yelpId) => {\n                    this.setYelpId(yelpId)\n                    this.setVisible(true)\n                  })}\n                />\n              </Responsive>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <TimeModal\n          open={this.state.isVisible}\n          onClose={() => this.setVisible(false)}\n          yelpItem={this.props.items.find((item) => item.id === this.state.yelpId)}\n          eventId={this.props.id}\n        />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...ownProps,\n  items: state.yelpItems,\n  activePage: state.activePage,\n  token: state.authProps.token,\n  yelpItemsTotalCount: state.yelpItemsTotalCount\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateYelpItemsThunk: (value, offset, location, token) => dispatch(updateYelpItemsThunk(value, offset, location, token)),\n  changeActivePageTo: (newPage) => dispatch(changeActivePageTo(newPage))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchExampleCategory)\n\nconst getWidth = () => {\n  const isSSR = typeof window === 'undefined'\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n","import React from 'react'\nimport { Segment, Header, Card } from 'semantic-ui-react'\nconst EventListsContainer = ({ eventsList }) => {\n  return (\n    <Segment.Group>\n      <Segment textAlign='center'>\n        <Header as='h3' content='Gather I.T' />\n        {\n          eventsList.items.map((item) => (\n            <Card key={`event-list-item${item.id}`}>\n              <Card.Content>\n                <Card.Header>{item.name}</Card.Header>\n                <Card.Description>{item.address}</Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                {item.start_time} - {item.end_time}\n              </Card.Content>\n            </Card>\n          ))\n        }\n      </Segment>\n    </Segment.Group>\n  )\n}\n\nexport default EventListsContainer;\n","import React from 'react'\nimport { Card, Grid, Icon } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { inviteUser } from '../redux/EventActions'\n\nconst InviteListCard = ({ contacts, inviteUser, eventId, invitees }) =>\n  <Card.Group>\n    {contacts.map(contact => (\n      <Card key={contact.username} onClick={() => inviteUser(eventId, contact.id)}>\n        <Card.Content>\n          <Card.Header>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width={10}>\n                  {contact.username}\n                </Grid.Column>\n                <Grid.Column width={2} textAlign='right'>\n                  <Icon name={!invitees.includes(contact.id) ? 'square outline' : 'check square outline'} />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Card.Header>\n        </Card.Content>\n      </Card>\n    ))}\n  </Card.Group>\n\n\nexport default connect(null, { inviteUser })(InviteListCard)\n","import React, { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport MobileSideBar from '../../subcomponents/MobileSideBar'\nimport { Container, Card, Menu, Segment } from 'semantic-ui-react'\nimport { mapEventToCard } from '../../Helpers/HelpFunctions'\nimport SearchExampleCategory from '../../subcomponents/SearchCategory'\nimport EventListsContainer from '../parents/EventListsContainer'\nimport InviteListCard from '../../subcomponents/InviteListCard'\n\nconst EventContainer = ({ events, eventsLists, contacts }) => {\n  const [activeItem, handleItemClick] = useState('add events')\n  const { id } = useParams()\n  const event = events.find(event => parseInt(event.id) === parseInt(id))\n  if (!event) return null\n  const cardInfo = mapEventToCard(event)\n  const eventsList = eventsLists.find(list => list.eventId === event.id)\n\n  return (\n    <MobileSideBar>\n      <Container style={{ minHeight: '95vh' }}>\n        <Card\n          header={cardInfo.header}\n          description={cardInfo.description}\n          meta={cardInfo.meta}\n          fluid={cardInfo.fluid}\n        />\n        <Menu attached='top' tabular widths={3} style={{ backgroundColor: 'grey' }}>\n          <Menu.Item\n            name='add events'\n            active={activeItem === 'add events'}\n            onClick={() => handleItemClick('add events')}\n          />\n          <Menu.Item\n            name='invite'\n            active={activeItem === 'invite'}\n            onClick={() => handleItemClick('invite')}\n          />\n          <Menu.Item\n            name='gather i.t.'\n            active={activeItem === 'gather i.t.'}\n            onClick={() => handleItemClick('gather i.t.')}\n          />\n        </Menu>\n        <Segment attached='bottom'>\n          {activeItem === 'add events' ? <SearchExampleCategory id={id} /> : null}\n          {activeItem === 'gather i.t.' ? <EventListsContainer eventsList={eventsList} /> : null}\n          {activeItem === 'invite' ? <InviteListCard eventId={id} contacts={contacts} invitees={event.invitations.map(invite => invite.user_id)} /> : null}\n        </Segment>\n      </Container>\n    </MobileSideBar>\n  )\n}\n\nexport default EventContainer\n","import React from 'react'\nimport { Grid, Segment, Card, Header } from 'semantic-ui-react'\nimport InviteListCard from '../../subcomponents/InviteListCard'\nimport SearchCategory from '../../subcomponents/SearchCategory'\nimport { mapYelpToCardItems } from '../../Helpers/HelpFunctions'\n\nexport const OnlyTabletGrid = ({ eventsList, cardInfo, contacts, yelpItems, id, invitees }) => (\n  <Grid columns={3} divided centered textAlign='center'>\n    <Grid.Row columns={3}>\n      <Grid.Column width={4}>\n        <Segment.Group>\n          <Card\n            header={cardInfo.header}\n            description={cardInfo.description}\n            meta={cardInfo.meta}\n            fluid={cardInfo.fluid}\n          />\n          <Segment.Group style={{ marginTop: '1em' }}>\n            <Segment >\n              <Header as='h3' textAlign='center' content='Gather I.L.' />\n              <InviteListCard contacts={contacts} eventId={id} invitees={invitees} />\n            </Segment>\n          </Segment.Group>\n        </Segment.Group>\n      </Grid.Column>\n      <Grid.Column width={8}>\n        <Segment.Group raised>\n          <Segment>\n            <SearchCategory size='tiny' aligned='center' />\n          </Segment>\n          <Segment>\n            <Card.Group itemsPerRow={2} items={mapYelpToCardItems(yelpItems)} />\n          </Segment>\n        </Segment.Group>\n      </Grid.Column>\n      <Grid.Column width={4}>\n        <Segment.Group>\n          <Segment textAlign='center'>\n            <Header as='h3' content='Gather I.T' />\n            {\n              eventsList.items.map((item) => (\n                <Card key={`event-list-item${item.id}`}>\n                  <Card.Content>\n                    <Card.Header>{item.name}</Card.Header>\n                    <Card.Description>{item.address}</Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    {item.start_time} - {item.end_time}\n                  </Card.Content>\n                </Card>\n              ))\n            }\n          </Segment>\n        </Segment.Group>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n)\n","import React, { useState } from 'react'\nimport { Grid, Card, Segment, Header } from 'semantic-ui-react'\nimport { mapYelpToCardItems } from '../../Helpers/HelpFunctions'\nimport InviteListCard from '../../subcomponents/InviteListCard'\nimport SearchCategory from '../../subcomponents/SearchCategory'\nimport TimeModal from '../../subcomponents/TimeModal'\nimport EventListsContainer from '../parents/EventListsContainer'\nexport const OnlyDesktopGrid = ({ cardInfo, contacts, yelpItems, id, invitees, eventsList }) => {\n  const [isVisible, setVisible] = useState(false)\n  const [yelpId, setYelpId] = useState('')\n  return (\n    <>\n      <Grid columns={3} divided centered textAlign='center'>\n        <Grid.Row columns={3}>\n          <Grid.Column width={3}>\n            <Segment.Group>\n              <Card\n                header={cardInfo.header}\n                description={cardInfo.description}\n                meta={cardInfo.meta}\n                fluid={cardInfo.fluid}\n              />\n              <Segment>\n                <Header as='h3' textAlign='center' content='Gather I.L.' />\n                <InviteListCard eventId={id} contacts={contacts} invitees={invitees} />\n              </Segment>\n            </Segment.Group>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Segment.Group raised>\n              <Segment>\n                <SearchCategory size='large' />\n              </Segment>\n              <Segment>\n                <Card.Group\n                  itemsPerRow={3}\n                  items={mapYelpToCardItems(yelpItems, (yelpId) => {\n                    setYelpId(yelpId)\n                    setVisible(true)\n                  })}\n                />\n              </Segment>\n            </Segment.Group>\n          </Grid.Column>\n          <Grid.Column width={3}>\n            <EventListsContainer eventsList={eventsList} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <TimeModal\n        open={isVisible}\n        onClose={() => setVisible(false)}\n        yelpItem={yelpItems.find((item) => item.id === yelpId)}\n        eventId={id}\n      />\n    </>\n  )\n}\n\nexport default OnlyDesktopGrid\n","import React from 'react'\nimport { Responsive, Pagination, Grid } from 'semantic-ui-react'\nimport DesktopMenuContainer from '../../subcomponents/DesktopMenuContainer'\nimport { mapEventToCard } from '../../Helpers/HelpFunctions'\nimport { OnlyTabletGrid } from '../tablet/OnlyTabletGrid'\nimport { OnlyDesktopGrid } from './OnlyDesktopGrid'\n\nconst onPageChange = (event, { activePage }, changeActivePageTo) => {\n  changeActivePageTo(activePage)\n  console.log(activePage)\n}\nconst DesktopEventContainer = (props) => {\n  const { id } = props.match.params\n  const { events, contacts, yelpItems } = props\n  const event = events.find(event => parseInt(event.id) === parseInt(id))\n  if (!event) return null\n  const cardInfo = mapEventToCard(event)\n  const eventsList = props.eventsLists.find(list => list.eventId === event.id)\n  return (\n    <DesktopMenuContainer>\n      <Grid centered>\n        <Grid.Column verticalAlign='middle' width={8}>\n          <Pagination\n            boundaryRange={0}\n            defaultActivePage={1}\n            ellipsisItem={null}\n            firstItem={null}\n            lastItem={null}\n            siblingRange={1}\n            totalPages={props.yelpItemsTotalCount / 12}\n            onPageChange={(event, data) => onPageChange(event, data, props.changeActivePageTo)}\n          />\n        </Grid.Column>\n      </Grid>\n\n      <Responsive maxWidth={Responsive.onlyTablet.maxWidth}>\n        <OnlyTabletGrid\n          cardInfo={cardInfo}\n          contacts={contacts}\n          yelpItems={yelpItems}\n          id={event.id}\n          invitees={event.invitations.map(invite => invite.user_id)}\n          eventsList={eventsList}\n        />\n      </Responsive>\n      <Responsive minWidth={Responsive.onlyComputer.minWidth}>\n        <OnlyDesktopGrid\n          cardInfo={cardInfo}\n          contacts={contacts}\n          yelpItems={yelpItems}\n          id={event.id}\n          invitees={event.invitations.map(invite => invite.user_id)}\n          eventsList={eventsList}\n        />\n      </Responsive>\n    </DesktopMenuContainer>\n  )\n}\n\nexport default DesktopEventContainer\n","import React, { useEffect } from 'react'\nimport MobileEventContainer from '../mobile/MobileEventContainer'\nimport { fetchEventsFor, changeActivePageTo } from '../../redux/EventActions'\nimport { connect } from 'react-redux'\nimport DesktopEventContainer from '../desktop/DesktopEventContainer'\nimport { withRouter } from 'react-router-dom'\n\nconst EventContainer = (props) => {\n  useEffect(() => {\n    const { getEvents, userId, token } = props\n    getEvents(userId, token) // eslint-disable-next-line\n  }, [])\n  return <ResponsiveContainer {...props} />\n}\n\nconst mapStateToProps = state => ({\n  events: state.events,\n  userId: state.authProps.user_id,\n  token: state.authProps.token,\n  yelpItems: state.yelpItems,\n  contacts: state.user ? state.user.contacts : [],\n  activePage: state.activePage,\n  yelpItemsTotalCount: state.yelpItemsTotalCount,\n  eventsLists: state.eventsList\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getEvents: () => dispatch(fetchEventsFor()),\n  changeActivePageTo: (newPage) => dispatch(changeActivePageTo(newPage))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EventContainer))\n\nconst ResponsiveContainer = (props) =>\n  <>\n    <MobileEventContainer {...props} />\n    <DesktopEventContainer {...props} />\n  </>\n","const convertedVapidKey = urlBase64ToUint8Array(process.env.REACT_APP_PUBLIC_VAPID_KEY)\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4)\n  // eslint-disable-next-line\n  const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\")\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\nfunction sendSubscription(subscription, userId) {\n  return fetch(`${process.env.REACT_APP_API_URL}/users/${userId}/notifications/create`, {\n    method: 'POST',\n    body: JSON.stringify(subscription),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n}\n\nexport function subscribeUser(userId) {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function(registration) {\n      if (!registration.pushManager) {\n        console.log('Push manager unavailable.')\n        return\n      }\n\n      registration.pushManager.getSubscription().then(function(existedSubscription) {\n        if (existedSubscription === null) {\n          console.log('No subscription detected, make a request.')\n          registration.pushManager.subscribe({\n            applicationServerKey: convertedVapidKey,\n            userVisibleOnly: true,\n          }).then(function(newSubscription) {\n            console.log('New subscription added.')\n            const userId = JSON.parse(localStorage.getItem('authProps')).user_id\n            sendSubscription(newSubscription, userId)\n          }).catch(function(e) {\n            console.log(e)\n            if (Notification.permission !== 'granted') {\n              console.log('Permission was not granted.')\n            } else {\n              console.error('An error ocurred during the subscription process.', e)\n            }\n          })\n        } else {\n          console.log('Existed subscription detected.')\n          sendSubscription(existedSubscription, userId)\n        }\n      })\n    })\n      .catch(function(e) {\n        console.error('An error ocurred during Service Worker registration.', e)\n      })\n  }\n}","import React, { Component } from 'react'\nimport './App.css'\nimport { connect } from 'react-redux'\nimport AuthContainer from './AuthContainer'\nimport LandingContainer from './LandingContainer'\nimport { Switch, Route } from 'react-router-dom'\nimport PrivateRoute from './subcomponents/PrivateRoute'\nimport DashboardContainer from './containers/parents/DashboardContainer'\nimport EventContainer from './containers/parents/EventContainer'\nimport { showUser } from './redux/UserActions'\nimport { subscribeUser } from './subscription'\n\n// import { addCreatedEvent } from './redux/EventActions'\nclass App extends Component {\n  componentDidMount () {\n    if (navigator.serviceWorker) navigator.serviceWorker.addEventListener('message', this.handleMessage)\n    const { userId, userToken } = this.props\n    if (userId && userToken) {\n      this.props.showUser()\n      if (navigator.serviceWorker) subscribeUser(userId)\n    }\n  }\n\n  handleMessage = (event) => {\n    if (event.origin !== 'http://localhost:3001') return\n    const action = JSON.parse(event.data)\n    console.log(action)\n    const { userId } = this.props\n    if (action.creator_id === userId && action.type === 'ADD_Event') this.props.dispatch(action)\n    else if (action.type === 'ADD_INVITATION' && action.invitation.user_id === userId) this.props.dispatch(action)\n  }\n\n  render = () =>\n    <>\n      <Switch>\n        <Route exact path='/signup' component={AuthContainer} />\n        <Route exact path='/login' component={AuthContainer} />\n        <Route exact path='/' component={LandingContainer} />\n        <PrivateRoute path='/dashboard'><DashboardContainer /></PrivateRoute>\n        <PrivateRoute path='/event/:id'><EventContainer /></PrivateRoute>\n      </Switch>\n    </>\n}\n\nconst mapStateToProps = state => {\n  const { authProps } = state\n  return {\n    userId: authProps ? authProps.user_id : null,\n    userToken: authProps ? authProps.token : null\n  }\n}\n\nconst mapDispatchToState = dispatch => ({\n  showUser: () => dispatch(showUser()),\n  dispatch\n})\n\nexport default connect(mapStateToProps, mapDispatchToState)(App)\n","import * as Type from './actionTypes'\n\nexport const addInvitations = (invitations) => ({\n  type: Type.ADD_INVITATIONS,\n  invitations\n})\n\nexport const addInvitation = (invitation) => ({\n  type: Type.ADD_INVITATION,\n  invitation\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      // const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      const swFileName = process.env.NODE_ENV === 'production' ? 'service-worker.js' : 'custom-sw.js'\n      const swUrl = `${process.env.PUBLIC_URL}/${swFileName}`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from './actionTypes'\nimport { combineReducers } from 'redux'\n\nconst initialState = {\n  authProps: JSON.parse(window.localStorage.getItem('authProps')),\n  loginErrors: [],\n  isLogin: false,\n  events: [],\n  isHiddenSidebar: true,\n  isNewEventModalShown: false,\n  yelpItems: [],\n  isContactModalHidden: true,\n  user: null,\n  activePage: 1,\n  yelpItemsTotalCount: 0,\n  invitations: [],\n  eventsList: [],\n  sessionId: window.localStorage.getItem('sessionId'),\n  hasNoEvents: false\n}\n\nconst isLogin = (state = initialState.isLogin, action) => {\n  switch (action.type) {\n    case Types.IS_LOGIN:\n      return action.isLogin\n    default:\n      return state\n  }\n}\n\nconst authProps = (state = initialState.authProps, action) => {\n  switch (action.type) {\n    case Types.ADD_AUTH_PROPS:\n      return action.authProps\n    case Types.LOGOUT_USER:\n      window.localStorage.removeItem('authProps')\n      return null\n    default:\n      return state\n  }\n}\n\nconst loginErrors = (state = initialState.loginErrors, action) => {\n  switch (action.type) {\n    case Types.CREATE_USER_ERROR:\n      return action.errors\n    default:\n      return state\n  }\n}\n\nconst events = (state = initialState.events, action) => {\n  switch (action.type) {\n    case Types.SAVE_EVENTS:\n      return action.events\n    case Types.ADD_EVENT:\n      const event = state.find(event => event.id === action.event.id)\n      if (event) return state\n      return [...state, action.event]\n    case Types.INVITE_USER:\n      return state.map(event => event.id === action.invite.event.id ? action.invite.event : event)\n    default:\n      return state\n  }\n}\n\nconst isHiddenSidebar = (state = initialState.isHiddenSidebar, action) => {\n  switch (action.type) {\n    case Types.CLOSE_SIDE_BAR:\n      return true\n    case Types.OPEN_SIDE_BAR:\n      return false\n    default:\n      return state\n  }\n}\n\nconst isNewEventModalShown = (state = initialState.isNewEventModalShown, action) => {\n  switch (action.type) {\n    case Types.OPEN_NEW_EVENT_MODAL:\n      return true\n    case Types.CLOSE_NEW_EVENT_MODAL:\n      return false\n    default:\n      return state\n  }\n}\n\nconst yelpItems = (state = initialState.yelpItems, action) => {\n  switch (action.type) {\n    case Types.UPDATE_YELP_ITEMS:\n      return action.yelpItems\n    default:\n      return state\n  }\n}\n\nconst isContactModalHidden = (state = initialState.isContactModalHidden, action) => {\n  switch (action.type) {\n    case Types.OPEN_ADD_CONTACT_MODAL:\n      return false\n    case Types.CLOSE_ADD_CONTACT_MODAL:\n      return true\n    default:\n      return state\n  }\n}\n\nconst user = (state = initialState.user, action) => {\n  switch (action.type) {\n    case Types.SHOW_USER:\n      return action.user\n    case Types.ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.contact]\n      }\n    default:\n      return state\n  }\n}\n\nconst activePage = (state = initialState.activePage, action) => {\n  switch (action.type) {\n    case Types.CHANGE_EVENTS_ACTIVE_PAGE:\n      return action.activePage\n    default:\n      return state\n  }\n}\n\nconst yelpItemsTotalCount = (state = initialState.yelpItemsTotalCount, action) => {\n  switch (action.type) {\n    case Types.YELP_ITEMS_COUNT_TOTAL:\n      return action.yelpItemsTotalCount\n    default:\n      return state\n  }\n}\n\nconst invitations = (state = initialState.invitations, action) => {\n  switch (action.type) {\n    case Types.ADD_INVITATIONS:\n      return action.invitations\n    case Types.ADD_INVITATION:\n      return state.find(invitation => invitation.id === action.invitation.id)\n                ? state : [...state, action.invitation]\n    case Types.UPDATE_INVITE:\n      return state.map(invite => invite.id === action.invitation.id ? action.invitation : invite)\n    default:\n      return state\n  }\n}\n\nconst eventsList = (state = initialState.eventsList, action) => {\n  switch (action.type) {\n    case Types.ADD_EVENTS_LISTS:\n      return action.eventsList\n    case Types.UPDATE_EVENTS_LISTS:\n      return state.map((eventsList) => {\n        if (eventsList.eventId === action.eventsListItem.event_id) {\n          return {\n            ...eventsList,\n            items: [...eventsList.items, action.eventsListItem]\n          }\n        }\n        return eventsList\n      })\n    case Types.APPEND_TO_EVENTS_LISTS:\n      return [...state, action.eventsListItem]\n    default:\n      return state\n  }\n}\n\nexport const sessionId = (state = initialState.sessionId, action) => {\n  switch (action.type) {\n    case Types.ADD_SESSION_ID:\n      return action.sessionId\n    default:\n      return state\n  }\n}\n\nexport const hasNoEvents = (state = initialState.hasNoEvents, action) => {\n  switch (action.type) {\n    case Types.NO_EVENTS:\n      return action.hasNoEvents\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  loginErrors,\n  isLogin,\n  authProps,\n  events,\n  isHiddenSidebar,\n  isNewEventModalShown,\n  yelpItems,\n  isContactModalHidden,\n  user,\n  activePage,\n  yelpItemsTotalCount,\n  invitations,\n  eventsList,\n  sessionId,\n  hasNoEvents\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport reducers from './redux/reducers'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport 'semantic-ui-less/semantic.less'\nconst middleware = compose(\n  applyMiddleware(thunk.withExtraArgument('https://gatherapp-flatiron.herokuapp.com')),\n  // applyMiddleware(thunk.withExtraArgument('http://192.168.0.27:3000'))\n  // (window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : (f => f))\n)\n\nconst store = createStore(reducers, middleware)\nReactDOM.render(<Provider store={store}><Router><App /></Router></Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}